{
  "version": 3,
  "sources": ["../node_modules/.pnpm/@remix-run+dev@1.6.8_biqbaboplfbrettd7655fr4n2y/node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/index.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\index.tsx\";\nimport * as route2 from \"./..\\\\cypress\\\\support\\\\test-routes\\\\create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { Response } from \"@remix-run/node\";\nimport type { EntryContext, Headers } from \"@remix-run/node\";\nimport isbot from \"isbot\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix on aws\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nconst getI18nData = async (_request: Request) => {\n  return {\n    country: 'pe',\n    language: 'br'\n  }\n}\n\ntype LoaderData = {\n  i18n: Awaited<ReturnType<typeof getI18nData>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    i18n: await getI18nData(request),\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "export default function Index() {\n  return (\n    <main className=\"relative min-h-screen bg-white sm:flex sm:items-center sm:justify-center\">\n      <h1>Hello world!!!</h1>\n    </main>\n  );\n}\n", "// import type { ActionFunction } from \"@remix-run/node\";\n// import { redirect } from \"@remix-run/node\";\n\n// import { createUser } from \"~/models/user.server\";\n// import { createUserSession } from \"~/session.server\";\n\n// export const action: ActionFunction = async ({ request }) => {\n//   if (process.env.NODE_ENV === \"production\") {\n//     console.error(\n//       \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n//     );\n//     // test routes should not be enabled in production or without\n//     // enable test routes... Just in case this somehow slips through\n//     // we'll redirect :)\n//     return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n//   }\n\n//   const { email } = await request.json();\n//   if (!email) {\n//     throw new Error(\"email required for login\");\n//   }\n//   if (!email.endsWith(\"@example.com\")) {\n//     throw new Error(\"All test emails must end in @example.com\");\n//   }\n\n//   const user = await createUser(email, \"myreallystrongpassword\");\n\n//   return createUserSession({\n//     request,\n//     userId: user.id,\n//     remember: true,\n//     redirectTo: \"/\",\n//   });\n// };\n\nexport default null;\n", "export default {'version':'01839370','entry':{'module':'/_static/build/entry.client-73PKSI4G.js','imports':['/_static/build/_shared/chunk-VL3JYCBF.js','/_static/build/_shared/chunk-RKDVJB3S.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-UVVXHEVU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-EOCOSDY2.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-BVJLVGV2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-01839370.js'};"],
  "mappings": "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",
  "names": []
}
